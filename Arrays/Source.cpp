#include<iostream>

using namespace std;
using std::cin;
using std::cout;
using std::endl;
#define tab "\t"

void main()
{
	setlocale(LC_ALL, "Rus");
	/*
		Массив(Array) - это набор переменных одного типа в непрерывной области памяти массивы нужны в том случае когда нужно много переменных 
		Массивы бывают:
		1.Динамические и Статические
		Статическим называется массив количество элементов которого не изменяется в процессе выполнения программы размер массива может быть задан только во время написания кода и только константным значением
		Размер же динамического массива можно задать переменным значением во время выполнения программы предварительно это значение можно вычеслить или ввести с клавиатуры.
		2.Как статические так и динамические массивы бывают одномерные двумерные трехмерные и т.д. многомерные количество измерений массива не ограничевается компилятором 
		Пока мы будем работать только с одномерными статическими массивами
		Объявление массива
		одномерный статический массив
		type name; //Объявление переменной
		type name[SIZE];//Объявление массива
		type - тип элементов одного массива могут быть только одного указанного типа
		name - имя массива. Для именования массивов используются такие же идентификаторы как и для именнования переменных
		SIZE - размер, или количество элементов массива. Может быть задан лишь целочисленным константным значением.
		элементы массива нумеруются с нуля 0 именно по этому номер последнего элемента всегда будет на 1 меньше количества элементов(n - 1 или SIZE - 1)
	*/
	const int n = 5;
	int arr[5] = { 3,5,8 };
	double suma = 0;
	float sredaref = 0;
	int min;
	int max;
	/*
		Для обращения к элементу массива достаточно указать его номер в квадратных скобках после именни массива.
		Для обращения к элементу массива очень удобно использовать цикл for посколбку у него есть счётчик i который можно использовать в качестве индекса(номера) элемента
	*/
	cout << "Введите значение элементов (" << n << ") шт." << endl;
	for (int i = 0; i < n; i++)
	{
		cout << "Введите значение ячейки " << i+1 << " массива: "; cin >> arr[i];
		cout << endl;
	}

	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << tab;
	}
	cout << endl;
	/*
		При объявлении массива для него просто выделяется память. Эта память заполнена мусором для того что бы убрать из массива мусор его надо проициализировать
		что бы проициализировать массив надо проинициализировать его значения через запятую в фигурных скобках
	*/
	for (int i = n-1; i >= 0; i--)
	{
		cout << arr[i] << tab;
	}
	cout << endl;

	min = arr[1];
	max = arr[1];
	for (int i = 0; i < n; i++)
	{
		suma += arr[i];
		if (arr[i]<min)
		{
			min = arr[i];
		}
		if (arr[i]>max)
		{
			max = arr[i];
		}
	}
	sredaref = suma / n;
	cout << "Сумма: " << suma << endl << "среднее арифметическое: " << sredaref << endl << "Максимальное число: " << max << endl << "Минимальное число: " << min << endl;
	//Выход за пределы массива
	/*
		При выходе за пределы массива могут возникать ошибки если выйти за пределы массива на чтение то есть прочитать ячейку памяти которая находиться за пределами массива то мы прочитаем мусор. При записи в ячейку памяти находящуюся за пределами массива возникает ошибка на этапе выполнения Runtime check failure #2	
	*/
}