#include<iostream>
#include<conio.h>

using namespace std;
using std::cin;
using std::cout;
using std::endl;

//#define IF
//#define SWITCH
//#define FOR
//#define TEMPERATURE
//#define TARGET
//#define CALK
//#define LOOPS
//#define WHILE_1
//#define WHILE_2
#define Do_While_1
//#define Do_While_2
//#define SHOOTER


#define tab "\t"
#define Escape 27
#define UP_ARROW 72
#define DOWN_ARROW 80
#define LEFT_ARROW 75
#define RIGHT_ARROW 77

void main()
{
	setlocale(LC_ALL, "Russian");
#ifdef IF
	//Часто возникает необходимость выбрать какая часть кода будет выполняться или же многократно выполнить часть кода для этого в любом языке программирования существуют управляющии структуры;
//Управляющие структуры делятся на конструкции ветвления и циклы;
//Конструкциям ветвления относят if и switch ;
//К циклам while, do while и for;
//Ветвления позволяют выбирать фрагмент кода для выпол а цикли позволяют многократно выполнить (повторить выполнение) определёную часть кода;
//if... else...
//if - это управляющая структура которая позволяет выбрать один из двух вариантов кода в зависимости от условия
/*if (Condition)
{
	code1;
}
else
{
	code2;
}
Condition - это условие по результату которого if выбирает какой код выполнить.
Если условие вернула True то выполняется код 1. Блок else с кодом 2 будут при этом проигнорированны.
Если условие вернуло False то код1 будет проигнорирован и выполнение выйдет за фигурные скобки в начало блока else если он есть и соответственно выполнится код 2 если он есть.
Блок Else и код 2 являются необязательными элементами в конструкции if. Тогда если блок else отсутствует и условие вернуло true то код 1 выполнится если false то код 1 будет проигнорирован и выполнение пойдёт дальше.
Конструкции if else можно объеденить в ципочку следующим образом
if(condition1)
{
	code1;
}
else if(condition2)
{
	code2;
}
else if(condition3)
{
	code3;
}
else if(conditionEnd)
{
	codeEnd;
}
else
{
	Default_Code;
}

*/
#ifdef TEMPERATURE
	int temperature;
	cout << "Введите температуру воздуха: "; cin >> temperature;
	if (temperature < -50) //простое условие
	{
		cout << "Вы на другой планете" << endl;
	}
	else if (temperature <= -10)
	{
		cout << "Сильный мороз" << endl;
	}
	else if (temperature <= 0)
	{
		cout << "Мороз" << endl;
	}
	else if (temperature <= 15)
	{
		cout << "Прохладно" << endl;
	}
	else if (temperature <= 25)
	{
		cout << "Тепло" << endl;
	}
	else if (temperature <= 35)
	{
		cout << "Жарко" << endl;
	}
	else if (temperature <= 50)
	{
		cout << "Очень жарко" << endl;
	}
	else
	{
		cout << "Вы на другой планете" << endl;
	}
#endif // TEMPERATURE

#ifdef TARGET
	int n = 0;
	cout << "Введите число: "; cin >> n;
	if (n >= 0 && n <= 10)// сложное условие
	{
		cout << "Цель поражена" << endl;
	}
	else
	{
		cout << "Не попал" << endl;
	}
#endif // TARGET

#ifdef CALK
	double a, b;
	char s;
	cout << "Введите простое арифметическое выражение: ";
	cin >> a >> s >> b;
	cout << a << " " << s << " " << b << endl;
	if (s == '+')
	{
		cout << a + b;
	}
	else if (s == '*')
	{
		cout << a * b;
	}
	else if (s == '-')
	{
		cout << a - b;
	}
	else if (s == '/')
	{
		cout << a / b;
	}
	else
	{
		cout << "Неверно введено арифметическое выражение ";
	}
#endif // CALK  
#endif // IF

#ifdef SWITCH
	//Конструкция множесвеного выбора switch
//В отличии от if который выберает один из двуз вариантов кода зависимо от результата сравнения, switch выберает один из множество вариантов кода взависимости от значения некоторой переменной
//У конструкции switch следуящая конструкция
/*
switch (var)
{
case CONST_1: ...code1...; break;
case CONST_2: ...code2...; break;
.................................
.................................
case CONST_N: ...codeN...; break;
default:
	break;
}
*/
// VAR - это переменная по значению которой switch выберает какой вариант кода выполнить.Эту переменную он последовательно сравнивает с константами CONST_1 CONST_2 и так далее и при совбодении switch переходит на соответсвующий case и начинает выполнять соответсвующий код до ключевого слова break. 
//break прерывает выполнение кода и выходит за пределы конструкции switch
//Если ключевое слово break отсутствует то switch выполнить код отвечающий следующему case и так далее пока не встретится break или не закончится switch
//Если переменная VAR не совпало не содной констант то выполнится код после метки default если она есть.
//Переменная VAR и константы CONST_1 CONST_2 CONST_N могут быть лишь целочисленного либо символьного типа все остальные типы данных switch не понимает
//switch это единственная управляющия структура у которой нет условия  
#endif // SWITCH

#ifdef LOOPS
	//Циклы
	//Цикл(Loop - петля) - это  управляющая структура которая позволяет многокранто выполнить определённый код повторить его выполнение пока выполняется некое условие
	//В языке С++ есть три цикла While... - цикл с предусловием 
	//do...while - цикл с постусловием
	//for... - цикл на заданое число итераций
	//Итерация - это однократное выполнение тела цикла
	//Тело цикла - это код который нужно зациклить(многократно выполнить)
	//while (Condtition)						do
	//{											{
	//		code;										code;
	//}											} while (Condition);
	//сначало проверяет услов потом выпол		сначала выпол и потом проверяет услов
	//Цикл while в первую очередь проверяет условие и только если условие вернуло true выпол тело цикла 1 раз после чего снова проверяется условие и так далее пока условие не вернет false если условие вернуло фолс то происходит выход за пределы цыкла и выполнение идёт дальше
	//Если при первой же проверке условие вернуло false то тело цикла ни разу не выполнится
	//Цикл do while первым делом выполняет тело цикла и только потом проверяет условие если условие вернуло true то произойдёт возврат в начало и тело цикла выполнится ищё раз и так далее по условие не вернёт false
	//Цикл do while отработает хотя бы один раз не зависима от условия. Это очень удобно когда в теле цикла инициализируется переменная входящая в условие.
#ifdef WHILE_1
		int i = 0;//Счетчик цикла
		int n;//Количество итераций
		cout << "Введите количество итераций: "; cin >> n;
		while (i++ < n)
		{
			cout << i << " Hello World ";
			//i++;
		}
#endif // WHILE_1
#ifdef WHILE_2
		int n;
		cout << "Введите количество итераций: "; cin >> n;
		while (n--)
		{
			cout << n << " Hello World!";
		}
#endif // WHILE_2
#ifdef Do_While_1
		char key;
		do
		{
			key = _getch();
			cout << int(key) << tab << key << endl;
		} while (key != Escape);
#endif // Do_While_1
#ifdef Do_While_2
		//Функция _getch ожидает нажатие клавиги и возвращает ASCII-код нажатой клавиши этот код мы присваиваем переменной key (int)key - явно преобразуем key типа chdr в тип int для того что бы увидеть ASCII код символа
//w - вперёд 119
//s - назад	 115
//a - влево  97
//d - вправо 100
////
//	char key;
//	do
//	{
//		key = _getch();
//		if (key == 119 || key == 'W' || key == UP_ARROW)
//		{
//			cout << key << " - вперед"<<endl;
//		}
//		else if (key == 115 || key == 'S' || key == DOWN_ARROW)
//		{
//			cout << key << " - назад" << endl;
//		}
//		else if (key == 97 || key == 'A' || key == LEFT_ARROW)
//		{
//			cout << key << " - влево" << endl;
//		}
//		else if (key == 100 || key == 'D' || key == RIGHT_ARROW)
//		{
//			cout << key << " - вправо" << endl;
//		}
//		else if (key == ' ')
//		{
//			cout << key << " - прыжок" << endl;
//		}
//		else if (key == 13)
//		{
//			cout << key << " - огонь" << endl;
//		}
//		else if(key != -32)
//		{
//			cout << "Error" << endl;
//		}
//	} while (key != Escape);  
#endif // Do_While_2


#endif // LOOPS
#ifdef SHOOTER
		char key;
		int ammo = 20;
		do
		{
			switch (key = _getch())
			{
			case 87:  case UP_ARROW:	case 119:cout << "Вперед" << endl;	break;
			case 115: case DOWN_ARROW:	case 83: cout << "Назад" << endl;	break;
			case 97:  case LEFT_ARROW:	case 65: cout << "Влево" << endl;	break;
			case 100: case RIGHT_ARROW:	case 68: cout << "Вправо" << endl;	break;
			case ' ':cout << "Прыжок" << endl;	break;
			case 13:
				if (ammo > 0)
				{
					ammo--;
					cout << "Огонь" << endl;
					cout << "Осталось " << ammo << " патронов" << endl;
				}
				else
				{
					cout << "Нужно перезаридить оружие(Кнопка R,r)" << endl;
				}
				break;
			case 114:
			case 82:
				ammo = 20;
				cout << "Оружие перезаряжено доступно " << ammo << " патронов" << endl;
				break;
			case Escape:cout << "Выход" << endl; break;
			case -32:break;
			default:
				cout << "Error" << endl;
				break;
			}
		} while (key != Escape);
#endif // SHOOTER

#ifdef FOR
		/*
Цикл for - это цикл на заданное число итераций

for (Start; Stop; Step)
{
	...;
	group - of - statements;
	...;
}

Start - это выражение, в котором объявляеться и инициализируется счётчик
Счётчик (Counter) - это переменная, которая считает сколько раз выполнится или будет раз будет выполнен может быть объявлен прямо в цикле или же перед ним
если счётчик объявлен прямо в цикле на месте выражения start то он и существует только в цикле и только в его области видимости
Локальный счётчик будет уничтожен после завершения цикла
Если же счётчик объявлен перед циклом то он будет существовать и после цикла а цикл его проста изментит
выражение старт отробатывает 1 раз перед первой итерацией
Stop - это условие продолжения или завершения цикла в этом условии как правило счётчик сравнивается с каким либо значением если условие вернуло true цикл выполняется в противном случае производится выход из тела цикла
УСЛОВИЕ ПРОВЕРЯЕТСЯ ПЕРЕД КАЖДОЙ ИТЕРАЦИЕЙ ЕСЛИ ПРИ ПЕРВОЙ ПРОВЕРКЕ УСЛОВИЕ ВЕРНУЛО FALSE ЦИКЛ НЕ ВЫПОЛНИТСЯ НИРАЗУ
Step(шаг цикла) - это выражение которое изменяет счетчик в этом выражении можно писать всё что угодно но обычна сдесь пишут инкримент счетчика.
Выражение step отробатывает после каждой итерации
*/
		int n;
		cout << "Введите кол итераций: "; cin >> n;
		for (int i = 0; i < n; i++)
		{
			/*cout << "Hello for";*/
			cout << i << tab;
		}
		cout << endl;
#endif // FOR



}

